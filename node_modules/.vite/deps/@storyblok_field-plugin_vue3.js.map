{
  "version": 3,
  "sources": ["../../@storyblok/field-plugin/dist/vue3/index.js"],
  "sourcesContent": ["import { inject as s, isProxy as u, toRaw as p, isRef as c, unref as f, defineComponent as g, reactive as y, provide as h, openBlock as m, createElementBlock as P, Fragment as v, renderSlot as d, createCommentVNode as a } from \"vue\";\nimport { createFieldPlugin as j } from \"@storyblok/field-plugin\";\nconst E = () => {\n  const r = s(\n    \"field-plugin\",\n    () => {\n      throw new Error(\n        \"You need to wrap your app with `<FieldPluginProvider>` component.\"\n      );\n    },\n    !0\n  );\n  if (r.type !== \"loaded\")\n    throw new Error(\n      \"The plugin is not loaded, yet `useFieldPlugin()` was invoked. Ensure that the component that invoked `useFieldPlugin()` is wrapped within `<FieldPluginProvider>`, and that it is placed within the default slot.\"\n    );\n  return r;\n};\nfunction l(r) {\n  let e = r;\n  return u(e) && (e = p(e)), c(e) && (e = f(e)), F(e) ? Object.keys(e).reduce((n, t) => (n[t] = l(e[t]), n), e) : Array.isArray(e) ? e.map(l) : e;\n}\nfunction F(r) {\n  return Object.prototype.toString.call(r) === \"[object Object]\";\n}\nconst O = /* @__PURE__ */ g({\n  __name: \"FieldPluginProvider\",\n  setup(r) {\n    const e = y({\n      type: \"loading\"\n    }), n = (t, i) => {\n      Object.keys(t).forEach((o) => {\n        i[o] === void 0 && delete t[o];\n      }), Object.assign(t, i);\n    };\n    return j((t) => {\n      t.type === \"loaded\" && e.type === \"loading\" && Object.assign(e, {\n        type: \"loaded\",\n        data: t.data\n      }), t.type === \"loaded\" && e.type === \"loaded\" && Object.keys(t.data).forEach((o) => {\n        typeof e.data[o] == \"object\" ? n(\n          e.data[o],\n          t.data[o]\n        ) : e.data[o] = t.data[o];\n      }), t.actions ? e.actions = {\n        ...t.actions,\n        setContent: (i) => {\n          t.actions.setContent(l(i));\n        }\n      } : e.actions = void 0, e.type = t.type, e.error = t.error;\n    }), h(\"field-plugin\", e), (t, i) => (m(), P(v, null, [\n      e.type === \"loading\" ? d(t.$slots, \"loading\", { key: 0 }) : a(\"\", !0),\n      e.type === \"error\" ? d(t.$slots, \"error\", { key: 1 }) : a(\"\", !0),\n      e.type === \"loaded\" ? d(t.$slots, \"default\", { key: 2 }) : a(\"\", !0)\n    ], 64));\n  }\n});\nexport {\n  O as FieldPluginProvider,\n  E as useFieldPlugin\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAEA,IAAM,IAAI,MAAM;AACd,QAAM,IAAI;AAAA,IACR;AAAA,IACA,MAAM;AACJ,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACA,MAAI,EAAE,SAAS;AACb,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AACF,SAAO;AACT;AACA,SAAS,EAAE,GAAG;AACZ,MAAI,IAAI;AACR,SAAO,QAAE,CAAC,MAAM,IAAI,MAAE,CAAC,IAAI,MAAE,CAAC,MAAM,IAAI,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,OAAO,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;AAChJ;AACA,SAAS,EAAE,GAAG;AACZ,SAAO,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AAC/C;AACA,IAAM,IAAoB,gBAAE;AAAA,EAC1B,QAAQ;AAAA,EACR,MAAM,GAAG;AACP,UAAM,IAAI,SAAE;AAAA,MACV,MAAM;AAAA,IACR,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM;AAChB,aAAO,KAAK,CAAC,EAAE,QAAQ,CAAC,MAAM;AAC5B,UAAE,CAAC,MAAM,UAAU,OAAO,EAAE,CAAC;AAAA,MAC/B,CAAC,GAAG,OAAO,OAAO,GAAG,CAAC;AAAA,IACxB;AACA,WAAO,EAAE,CAAC,MAAM;AACd,QAAE,SAAS,YAAY,EAAE,SAAS,aAAa,OAAO,OAAO,GAAG;AAAA,QAC9D,MAAM;AAAA,QACN,MAAM,EAAE;AAAA,MACV,CAAC,GAAG,EAAE,SAAS,YAAY,EAAE,SAAS,YAAY,OAAO,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM;AACnF,eAAO,EAAE,KAAK,CAAC,KAAK,WAAW;AAAA,UAC7B,EAAE,KAAK,CAAC;AAAA,UACR,EAAE,KAAK,CAAC;AAAA,QACV,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;AAAA,MAC1B,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU;AAAA,QAC1B,GAAG,EAAE;AAAA,QACL,YAAY,CAAC,MAAM;AACjB,YAAE,QAAQ,WAAW,EAAE,CAAC,CAAC;AAAA,QAC3B;AAAA,MACF,IAAI,EAAE,UAAU,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;AAAA,IACvD,CAAC,GAAG,QAAE,gBAAgB,CAAC,GAAG,CAAC,GAAG,OAAO,UAAE,GAAG,mBAAE,UAAG,MAAM;AAAA,MACnD,EAAE,SAAS,YAAY,WAAE,EAAE,QAAQ,WAAW,EAAE,KAAK,EAAE,CAAC,IAAI,mBAAE,IAAI,IAAE;AAAA,MACpE,EAAE,SAAS,UAAU,WAAE,EAAE,QAAQ,SAAS,EAAE,KAAK,EAAE,CAAC,IAAI,mBAAE,IAAI,IAAE;AAAA,MAChE,EAAE,SAAS,WAAW,WAAE,EAAE,QAAQ,WAAW,EAAE,KAAK,EAAE,CAAC,IAAI,mBAAE,IAAI,IAAE;AAAA,IACrE,GAAG,EAAE;AAAA,EACP;AACF,CAAC;",
  "names": []
}

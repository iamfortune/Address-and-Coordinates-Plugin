import * as querystring from "querystring";
const sandboxBaseUrl = `https://plugin-sandbox.storyblok.com/field-plugin`;
const sandboxUrl = (fieldPluginUrl) => {
  const urlQuery = querystring.stringify({
    url: fieldPluginUrl
  });
  return `${sandboxBaseUrl}?${urlQuery}`;
};
const styles = {
  reset: "\x1B[0m",
  green: "\x1B[32m",
  bold: "\x1B[1m"
};
const green = (text) => `${styles.green}${text}${styles.reset}`;
const bold = (text) => `${styles.bold}${text}${styles.reset}`;
const arrow = green("âžœ");
function printProd() {
  return {
    name: "storyblok-field-plugin-print-prod",
    // https://vitejs.dev/guide/api-plugin.html#plugin-ordering
    enforce: "post",
    writeBundle: () => {
      console.log(` 
  Deploy the plugin to production with:
  
    ${green("npm run deploy")}
      `);
    }
  };
}
function printDev() {
  return {
    name: "storyblok-field-plugin-print-dev",
    // https://vitejs.dev/guide/api-plugin.html#plugin-ordering
    enforce: "post",
    // https://vitejs.dev/guide/api-plugin.html#conditional-application
    apply: "serve",
    configureServer(server) {
      server.printUrls = () => {
        const localUrl = server.resolvedUrls.local[0];
        const networkUrl = server.resolvedUrls.network[0];
        console.log(`
    ${arrow}  ${bold(
          "Partner Portal"
        )}:  https://app.storyblok.com/#/partner/fields
    ${arrow}  ${bold("My plugins")}:      https://app.storyblok.com/#/me/plugins
     
    ${arrow}  ${bold("Local")}:    ${localUrl}
    ${arrow}  ${bold("Network")}:  ${networkUrl}
        
  See the plugin in action on 
     
    ${arrow}  ${bold("Sandbox")}: ${sandboxUrl(localUrl)}
          `);
      };
    }
  };
}
const plugins = [printProd(), printDev()];
export {
  plugins,
  printDev,
  printProd
};

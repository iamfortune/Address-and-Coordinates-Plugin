(function(o,i){typeof exports=="object"&&typeof module<"u"?i(exports,require("vue"),require("@storyblok/field-plugin")):typeof define=="function"&&define.amd?define(["exports","vue","@storyblok/field-plugin"],i):(o=typeof globalThis<"u"?globalThis:o||self,i(o.Vue3Helper={},o.Vue,o.FieldPlugin))})(this,function(o,i,a){"use strict";const p=()=>{const r=i.inject("field-plugin",()=>{throw new Error("You need to wrap your app with `<FieldPluginProvider>` component.")},!0);if(r.type!=="loaded")throw new Error("The plugin is not loaded, yet `useFieldPlugin()` was invoked. Ensure that the component that invoked `useFieldPlugin()` is wrapped within `<FieldPluginProvider>`, and that it is placed within the default slot.");return r};function s(r){let e=r;return i.isProxy(e)&&(e=i.toRaw(e)),i.isRef(e)&&(e=i.unref(e)),u(e)?Object.keys(e).reduce((l,t)=>(l[t]=s(e[t]),l),e):Array.isArray(e)?e.map(s):e}function u(r){return Object.prototype.toString.call(r)==="[object Object]"}const c=i.defineComponent({__name:"FieldPluginProvider",setup(r){const e=i.reactive({type:"loading"}),l=(t,d)=>{Object.keys(t).forEach(n=>{d[n]===void 0&&delete t[n]}),Object.assign(t,d)};return a.createFieldPlugin(t=>{t.type==="loaded"&&e.type==="loading"&&Object.assign(e,{type:"loaded",data:t.data}),t.type==="loaded"&&e.type==="loaded"&&Object.keys(t.data).forEach(n=>{typeof e.data[n]=="object"?l(e.data[n],t.data[n]):e.data[n]=t.data[n]}),t.actions?e.actions={...t.actions,setContent:d=>{t.actions.setContent(s(d))}}:e.actions=void 0,e.type=t.type,e.error=t.error}),i.provide("field-plugin",e),(t,d)=>(i.openBlock(),i.createElementBlock(i.Fragment,null,[e.type==="loading"?i.renderSlot(t.$slots,"loading",{key:0}):i.createCommentVNode("",!0),e.type==="error"?i.renderSlot(t.$slots,"error",{key:1}):i.createCommentVNode("",!0),e.type==="loaded"?i.renderSlot(t.$slots,"default",{key:2}):i.createCommentVNode("",!0)],64))}});o.FieldPluginProvider=c,o.useFieldPlugin=p,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
